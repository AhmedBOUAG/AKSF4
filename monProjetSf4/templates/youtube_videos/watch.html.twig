{% extends 'base.html.twig' %}

{% block title %}
  {{ video.title }} | aitkermoune.net
{% endblock %}
{% block metaDescription %}
  {{ video.description|slice(0, 160) }}
{% endblock %}
{% block imageShareFB %}
  https://img.youtube.com/vi/{{ video.linkYoutube }}/sddefault.jpg
{% endblock %}
{% block body %}
  <div id="player" class="card w-100 p-7"></div>
  <br />
  <div class="bloc-attributes-video">
    <h4>
      {{ video.title }}
    </h4>
    <div class="info-video">
      <small>
        <b><i class="fa fa-calendar"></i></b> {{ video.dateAd|date('d-m-Y') }}
      </small>
    </div>
  </div>
  <br />
  <div class="bloc-attributes-video">
    <p>
      {{ video.description }}
    </p>
  </div>
  <div id="shareIcons" class="jssocials">
    <div class="jssocials-shares">
      <span class="bloc-social-shares">
        <div class="jssocials-share jssocials-share-twitter">
          <a class="jssocials-share-link"
            href="https://twitter.com/share?url=http%3A%2F%2Faitkermoune.net/youtube/videos/watch/{{
            video.id
            }}"
            target="_blank">
            <i class="fab fa-twitter jssocials-share-logo"></i>
          </a>
        </div>
        <div class="jssocials-share jssocials-share-facebook">
          <a class="jssocials-share-link"
            href="https://facebook.com/sharer/sharer.php?u=http%3A%2F%2Faitkermoune.net/youtube/videos/watch/{{
            video.id
            }}"
            target="_blank">
            <i class="fab fa-facebook jssocials-share-logo"></i>
          </a>
        </div>
        <div class="jssocials-share jssocials-share-googleplus">
          <a class="jssocials-share-link"
            href="https://plus.google.com/share?url=http%3A%2F%2Faitkermoune.net/youtube/videos/watch/{{
            video.id
            }}"
            target="_blank">
            <i class="fab fa-google-plus jssocials-share-logo"></i>
          </a>
        </div>
        <div class="jssocials-share jssocials-share-linkedin">
          <a class="jssocials-share-link"
            href="https://www.linkedin.com/shareArticle?url=http%3A%2F%2Faitkermoune.net/youtube/videos/watch/{{
            video.id
            }}"
            target="_blank">
            <i class="fab fa-linkedin jssocials-share-logo"></i>
          </a>
        </div>
        <div class="jssocials-share jssocials-share-pinterest">
          <a class="jssocials-share-link"
            href="https://pinterest.com/pin/create/bookmarklet/?&amp;url=http%3A%2F%2Faitkermoune.net/youtube/videos/watch/{{
            video.id
            }}"
            target="_blank">
            <i class="fab fa-pinterest jssocials-share-logo"></i>
          </a>
        </div>
        <span class="label-share">
          {% trans %}Partager{% endtrans %} <i class="fas fa-share-alt"></i>
        </span> <span class="right"></span>
      </span>
    </div>
  </div>
  <br />
  {% include '/bundles/FOSCommentBundle/Thread/async.html.twig' with {
    id: 'video_' ~ video.id
  } %}
  <script type="text/javascript"
    src="http://code.jquery.com/jquery-1.8.2.min.js"></script>
  <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          videoId: '{{ video.linkYoutube }}',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          //setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script>
{% endblock %}
